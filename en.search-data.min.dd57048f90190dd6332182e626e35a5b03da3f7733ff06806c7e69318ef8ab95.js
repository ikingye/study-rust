"use strict";(function(){const t={cache:!0};t.doc={id:"id",field:["title","content"],store:["title","href","section"]};const e=FlexSearch.create("balance",t);window.bookSearchIndex=e,e.add({id:0,href:"/study-rust/docs/appendix/interview/basic/",title:"基础",section:"4.2 面试题",content:" 基础面试题 # "}),e.add({id:1,href:"/study-rust/docs/appendix/interview/advanced/",title:"进阶",section:"4.2 面试题",content:" 进阶面试题 # "}),e.add({id:2,href:"/study-rust/docs/code/",title:"第三部分 设计与实现",section:"Docs",content:"rust-lang/rust "}),e.add({id:3,href:"/study-rust/docs/basic/grammar/",title:"1.1 语法",section:"第一部分 基础入门",content:" 语法 # "}),e.add({id:4,href:"/study-rust/docs/basic/grammar/type/",title:"1.1.1 数据类型",section:"1.1 语法",content:" 数据类型 # "}),e.add({id:5,href:"/study-rust/docs/advanced/pattern/",title:"2.1 设计模式",section:"第二部分 进阶实战",content:" 设计模式 # "}),e.add({id:6,href:"/study-rust/docs/code/type/",title:"3.1 数据类型",section:"第三部分 设计与实现",content:" 数据类型 # "}),e.add({id:7,href:"/study-rust/docs/appendix/tutorial/",title:"4.1 教程",section:"第四部分 附录",content:` 教程 # Rust 语言入门有哪些书？ 基础 # Learn Rust in Y minutes # The Rust Programming Language # rust-lang/book The most comprehensive resource for learning Rust, but a bit theoretical sometimes. You will be using this along with Rustlings!
Rust by Example # rust-lang/rust-by-example Learn Rust by solving little exercises! It&rsquo;s almost like rustlings, but online.
rustlings # rust-lang/rustlings Small exercises to get you used to reading and writing Rust code!
A Rust Cookbook # rust-lang-nursery/rust-cookbook https://rust-lang-nursery.github.io/rust-cookbook/
Rust 烹饪书 # chinanf-boy/rust-cookbook-zh http://llever.com/rust-cookbook-zh
Tour of Rust # richardanaya/tour_of_rust https://tourofrust.com/
Rust 语言之旅 https://tourofrust.com/00_zh-cn.html
Writing an OS in Rust # phil-opp/blog_os This repository contains the source code for the Writing an OS in Rust series at os.phil-opp.com.
Tutorial for rCore OS # rcore-os/rCore-Tutorial Tutorial for rCore OS step by step (3rd edition)
V3: https://rcore-os.github.io/rCore-Tutorial-deploy/ V2: https://rcore-os.github.io/rCore_tutorial_doc/ 进阶 # `}),e.add({id:8,href:"/study-rust/docs/basic/grammar/keyword/",title:"1.1.2 关键字",section:"1.1 语法",content:" 关键字 # "}),e.add({id:9,href:"/study-rust/docs/basic/std/",title:"1.2 标准库",section:"第一部分 基础入门",content:" 标准库 # "}),e.add({id:10,href:"/study-rust/docs/advanced/algs/",title:"2.2 算法实现",section:"第二部分 进阶实战",content:" 算法实现 # "}),e.add({id:11,href:"/study-rust/docs/code/keyword/",title:"3.2 关键字",section:"第三部分 设计与实现",content:" 关键字 # "}),e.add({id:12,href:"/study-rust/docs/appendix/interview/",title:"4.2 面试题",section:"第四部分 附录",content:" 面试题 # 基础题 # 进阶题 # "}),e.add({id:13,href:"/study-rust/docs/basic/others/pm/",title:"包管理",section:"1.4 其他",content:` Rust 包管理 # Cargo # the Rust build tool and package manager
`}),e.add({id:14,href:"/study-rust/docs/basic/spec/",title:"1.3 编程规范",section:"第一部分 基础入门",content:" 编程规范 # "}),e.add({id:15,href:"/study-rust/docs/advanced/pkg/",title:"2.3 常用库",section:"第二部分 进阶实战",content:" 常用库 # "}),e.add({id:16,href:"/study-rust/docs/code/runtime/",title:"3.3 运行时",section:"第三部分 设计与实现",content:" 运行时 # Rust 编译器 # Rust 编译器是一个 LLVM 编译前端，将代码编译为 LLVM IR， 然后经过 LLVM 编译为相应的平台目标\nRust 源码 -&gt; 分词和解析 -&gt; 生成 AST（抽象语法树） -&gt; 简化处理 -&gt; HIR（`High-level IR`） -&gt; 编译 -&gt; MIR （`Middle IR`） -&gt; 翻译 -&gt; LLVM IR -&gt; 编译 -&gt; 目标机器码 "}),e.add({id:17,href:"/study-rust/docs/appendix/attention/",title:"4.3 关注项目",section:"第四部分 附录",content:` 关注项目 # rust-lang/rust # Empowering everyone to build reliable and efficient software. https://www.rust-lang.org
redox-os/redox # Redox is an operating system written in Rust
servo/servo # The Servo Browser Engine
https://servo.org/
rajasekarv/vega # A new arguably faster implementation of Apache Spark from scratch in Rust
Rust version of THU uCore OS Plus. # rcore-os/rCore web framework # yewstack/yew # Rust / Wasm framework for building client web apps https://yew.rs
SergioBenitez/Rocket # A web framework for Rust. https://rocket.rs
actix/actix-web # Actix web is a small, pragmatic, and extremely fast rust web framework.
工具 # ogham/exa # A modern version of ‘ls’.
其他 # swc-project/swc # Super-fast typescript / javascript compiler written in rust https://swc-project.github.io
tokio-rs/tokio # A runtime for writing reliable, asynchronous, and slim applications with the Rust programming language.
valeriansaliou/sonic # Fast, lightweight &amp; schema-less search backend. An alternative to Elasticsearch that runs on a few MBs of RAM. https://crates.io/crates/sonic-server
`}),e.add({id:18,href:"/study-rust/docs/basic/others/history/",title:"历史",section:"1.4 其他",content:" Rust 历史 # "}),e.add({id:19,href:"/study-rust/docs/basic/others/",title:"1.4 其他",section:"第一部分 基础入门",content:" 其他 # "}),e.add({id:20,href:"/study-rust/docs/advanced/snippet/",title:"2.4 代码片段",section:"第二部分 进阶实战",content:" 代码片段 # "}),e.add({id:21,href:"/study-rust/docs/advanced/test/",title:"2.5 测试",section:"第二部分 进阶实战",content:" 测试 # "}),e.add({id:22,href:"/study-rust/docs/basic/others/version/",title:"版本",section:"1.4 其他",content:" 版本 # rust-lang/rust 版本历史 # 2 # 1 # 1.46 # 1.45 # 1.0 (2015-05-15) # 0 # 版本管理 # rustup # # 升级 rustup update "}),e.add({id:23,href:"/study-rust/docs/advanced/prof/",title:"2.6 性能",section:"第二部分 进阶实战",content:" 性能 # "}),e.add({id:24,href:"/study-rust/docs/advanced/frame/",title:"2.7 框架",section:"第二部分 进阶实战",content:" 框架 # "})})()